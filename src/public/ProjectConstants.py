from enum import Enum, auto
from pathlib import Path

# Window Caption
GAME_CAPTION = "Rummikub"
# Screen Window Size
SCREEN_W, SCREEN_H = 1600, 900

# Timer
TIME_LIMIT_MIN = 1
TIME_LIMIT_MAX_FOR_AI_RESOLVE = 3
TIME_LIMIT = 60
TIME_LIMIT = max(TIME_LIMIT, TIME_LIMIT_MIN)

# Tile (63:88)
TILE_W = SCREEN_W * 0.027
TILE_H = TILE_W / 63 * 88
TILE_SPACING_W = TILE_W * 0.04
TILE_SPACING_H = TILE_H * 0.04

# Player
# PLAYER_X = 0
# PLAYER_Y = 50
PLAYER_W = 150
PLAYER_H = PLAYER_W * 1.05
PLAYER_SPACING = 48

PLAYER_X = [SCREEN_W * 0.1, SCREEN_W * 0.0001, SCREEN_W - SCREEN_W * 0.0001 - PLAYER_W]
PLAYER_Y = [SCREEN_H * 0.0001, SCREEN_H * 0.0001, SCREEN_H * 0.0001]

# LOCATION CONTROL
RIGHTSIDE_BUTTON_X = SCREEN_W * 0.86
ROUND_BUTTON_W = SCREEN_W * 0.08
RIGHTSIDE_BUTTON_SPACING = SCREEN_H * 0.17

LEFTSIDE_BUTTON_X = SCREEN_W * 0.1
LEFTSIDE_BUTTON_SPACING = SCREEN_H * 0.07

# Pool
POOL_W = SCREEN_W * 0.08
POOL_H = POOL_W * 1.5
POOL_X, POOL_Y = RIGHTSIDE_BUTTON_X - POOL_W / 2.5, SCREEN_H - POOL_H + SCREEN_H * 0.05

# Rack User
RACK_USER_COL_LIMIT = 21
RACK_USER_ROW_LIMIT = 2
RACK_USER_W = (TILE_SPACING_W * 2 + TILE_W) * RACK_USER_COL_LIMIT
RACK_USER_H = (TILE_SPACING_H * 2 + TILE_H) * RACK_USER_ROW_LIMIT
RACK_USER_X, RACK_USER_Y = (SCREEN_W - RACK_USER_W) / 2, SCREEN_H - RACK_USER_H - 24

# Rack AI
RACK_AI_COL_LIMIT = [21, 3, 3]
RACK_AI_ROW_LIMIT = [2, 11, 11]
RACK_AI_W = [(TILE_SPACING_W * 2 + TILE_W) * col for col in RACK_AI_COL_LIMIT]
RACK_AI_H = [(TILE_SPACING_H * 2 + TILE_H) * row for row in RACK_AI_ROW_LIMIT]
RACK_AI_X = [
    (SCREEN_W - RACK_AI_W[0]) / 2,
    SCREEN_W * 0.01,
    SCREEN_W - SCREEN_W * 0.01 - RACK_AI_W[2]
]
RACK_AI_Y = [
    SCREEN_H * 0.01,
    SCREEN_H * 0.16,
    SCREEN_H * 0.16
]

# Table
TABLE_COL_LIMIT = 21
TABLE_ROW_LIMIT = 9
TABLE_W = (TILE_SPACING_W * 2 + TILE_W) * TABLE_COL_LIMIT
TABLE_H = (TILE_SPACING_H * 2 + TILE_H) * TABLE_ROW_LIMIT
TABLE_X = (SCREEN_W - TABLE_W) / 2
TABLE_Y = (SCREEN_H - TABLE_H) / 2 - SCREEN_H * 0.03 + 6

# Score Board
SB_W = 20
SB_H = 20
SB_X = SCREEN_W * 0.5
SB_Y = SCREEN_H * 0.5

# RGB Colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREY = (128, 128, 128)
# Color selected for tiles
RED = (255, 81, 62)
GREEN = (100, 131, 91)
BLUE = (151, 171, 200)
YELLOW = (247, 207, 165)
PURPLE = (128, 0, 128)
TRANSPARENT = (255, 255, 255, 0)

# Tile Colours
TILE_COLOURS = {
    "Red": RED,
    "Green": GREEN,
    "Blue": BLUE,
    "Yellow": YELLOW,
    "Purple": PURPLE,
}

# Tile Numbers
MIN_TILE_NUMBER = 1
MAX_TILE_NUMBER = 15
TILE_NUMBER_RANGE = [i for i in range(MIN_TILE_NUMBER, MAX_TILE_NUMBER + 1)]

# Joker
JOKER_NUMBER = 30
JOKER_COLOR = WHITE


class GameStatus(Enum):
    MAIN_MENU = auto()
    GAME_SETTINGS = auto()
    # PICK_TILE = auto()
    PLAYING = auto()
    SCORE_BOARD = auto()


RESOURCES_DIR = Path(Path(__file__).parent.parent.parent, "resources")
IMG_DIR = Path(RESOURCES_DIR, "image")
BUTTONS_DIR = Path(IMG_DIR, "BUTTONS")
TILES_DIR = Path(IMG_DIR, "TILES")

BTN_START_W = SCREEN_H * 0.2
BTN_START_H = BTN_START_W / 2
BTN_START_X = (SCREEN_W - BTN_START_W) / 2
BTN_START_Y = SCREEN_H * 0.83

PLAYER_NUM_BUTTON_W = SCREEN_H * 0.05
PLAYER_NUM_BUTTON_SPACE = SCREEN_H * 0.07
PLAYER_NUM_BUTTON_Y = SCREEN_H * 0.65

BTN_MINUS_W = PLAYER_NUM_BUTTON_W
BTN_MINUS_H = PLAYER_NUM_BUTTON_W
BTN_MINUS_X = SCREEN_W * 0.5 - BTN_MINUS_W * 0.5 - PLAYER_NUM_BUTTON_SPACE / 2
BTN_MINUS_Y = PLAYER_NUM_BUTTON_Y

BTN_PLUS_W = PLAYER_NUM_BUTTON_W
BTN_PLUS_H = PLAYER_NUM_BUTTON_W
BTN_PLUS_X = SCREEN_W * 0.5 - BTN_PLUS_W * 0.5 + PLAYER_NUM_BUTTON_SPACE / 2
BTN_PLUS_Y = PLAYER_NUM_BUTTON_Y

BTN_CONFIRM_W = SCREEN_H * 0.2
BTN_CONFIRM_H = BTN_CONFIRM_W / 2
BTN_CONFIRM_X = (SCREEN_W - BTN_CONFIRM_W) * 0.5
BTN_CONFIRM_Y = SCREEN_H * 0.7

BTN_FOLD_W = SCREEN_W * 0.1
BTN_FOLD_H = BTN_FOLD_W / 2
BTN_FOLD_X = RIGHTSIDE_BUTTON_X - BTN_FOLD_W / 2 - SCREEN_W * 0.01
BTN_FOLD_Y = SCREEN_H * 0.03

SORT_BUTTON_W = SCREEN_W * 0.08
SORT_BUTTON_H = SORT_BUTTON_W * 0.9

BTN_GETGROUP_W = SORT_BUTTON_W
BTN_GETGROUP_H = SORT_BUTTON_H
BTN_GETGROUP_X = RIGHTSIDE_BUTTON_X - BTN_GETGROUP_W * 0.5
BTN_GETGROUP_Y = SCREEN_H * 0.15

BTN_GETRUN_W = SORT_BUTTON_W
BTN_GETRUN_H = SORT_BUTTON_H
BTN_GETRUN_X = RIGHTSIDE_BUTTON_X - BTN_GETRUN_W * 0.5
BTN_GETRUN_Y = BTN_GETGROUP_Y + BTN_GETGROUP_H * 0.7

BTN_ENDTURN_W = ROUND_BUTTON_W
BTN_ENDTURN_H = ROUND_BUTTON_W
BTN_ENDTURN_X = RIGHTSIDE_BUTTON_X - BTN_ENDTURN_W * 0.5
BTN_ENDTURN_Y = BTN_GETRUN_Y + RIGHTSIDE_BUTTON_SPACING

BTN_ROLLBACK_W = ROUND_BUTTON_W
BTN_ROLLBACK_H = ROUND_BUTTON_W
BTN_ROLLBACK_X = RIGHTSIDE_BUTTON_X - BTN_ROLLBACK_W * 0.5
BTN_ROLLBACK_Y = BTN_ENDTURN_Y + RIGHTSIDE_BUTTON_SPACING

BTN_DRAW_W = SCREEN_W * 0.06
BTN_DRAW_H = BTN_DRAW_W
BTN_DRAW_X = RIGHTSIDE_BUTTON_X - BTN_DRAW_W * 0.5
BTN_DRAW_Y = SCREEN_H * 0.73

BTN_COMPUTERCONTROL_W = SCREEN_W * 0.1
BTN_COMPUTERCONTROL_H = BTN_COMPUTERCONTROL_W / 2
BTN_COMPUTERCONTROL_X = LEFTSIDE_BUTTON_X
BTN_COMPUTERCONTROL_Y = SCREEN_H * 0.74

PLAYER_NUM_W = SCREEN_W * 0.06
PLAYER_NUM_H = PLAYER_NUM_W * 2
PLAYER_NUM_X = SCREEN_W / 2 - PLAYER_NUM_W / 2
PLAYER_NUM_Y = SCREEN_H / 2 - PLAYER_NUM_H / 2 - SCREEN_H * 0.003

COUNTDOWN_TIMER_W = SCREEN_W * 0.1
COUNTDOWN_TIMER_H = COUNTDOWN_TIMER_W * 1.1
COUNTDOWN_TIMER_X = LEFTSIDE_BUTTON_X
COUNTDOWN_TIMER_Y = PLAYER_Y[0] + PLAYER_H + LEFTSIDE_BUTTON_SPACING / 2

MESSAGE_BOX_W = SCREEN_W * 0.08
MESSAGE_BOX_H = MESSAGE_BOX_W * 1.5
MESSAGE_BOX_X = LEFTSIDE_BUTTON_X + SCREEN_W * 0.01
MESSAGE_BOX_Y = COUNTDOWN_TIMER_Y + COUNTDOWN_TIMER_H + LEFTSIDE_BUTTON_SPACING / 2
